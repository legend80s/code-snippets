{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	
	// keywords
	"mounted": {
		"prefix": "mounted",
		"body": "mounted",
		"description": "vue lifecycle mounted"
	},
	"console.log('$1')": {
		"prefix": "log short console.log('$1')",
		"body": ["console.log('$1');"],
		"description": "console.log('$1')"
	},
	"console.log('$1:', $1)": {
		"prefix": "log verbose console.log('$1:', $1)",
		"body": ["console.log('$1:', $1);"],
		"description": "console.log('$1:', $1)"
	},

	"promise-call-chain": {
		"prefix": "promise-call-chain",
		"body": [
			"$1().then(({ $2 }) => {",
			"  $3;",
			"}).catch((error) => {",
			"  console.error('$1', error);",
			"});"
		],
		"description": "promise-call-chain"
	},

	"useEffect": {
		"prefix": "useEffect",
		"body": [
			"useEffect(() => {",
			"  $1;",
			"}, []);",
		],
		"description": "useEffect"
	},
	"useState": {
		"prefix": "useState",
		"body": [
			"const [$1, set${1/(^.)/${1:/upcase}/}] = useState(${3:false});",
		],
		"description": "useState"
	},

	"then": {
		"prefix": ".then",
		"body": ".then(($1) => $2);",
		"description": "promise.then"
	},

	// vue
	"mapStateToProps": {
		"prefix": "mapStateToProps",
		"body": "mapStateToProps: [\n  '$1',\n],",
		"description": "mapStateToProps"
	},
	"mapActionsToMethods": {
		"prefix": "mapActionsToMethods",
		"body": "mapActionsToMethods: [\n  '$1',\n],",
		"description": "mapActionsToMethods"
	},
	"prop-definition": {
		"prefix": "prop-definition",
		"body": "{ type: ${1:String}, required: ${2:false}, default: ${3:''} },",
		"description": "prop-definition"
	},
}
